x-base-django: &base-django
  image: "mishka251/stalker_op22_cyclic_quest_wiki-django:${VERSION}"
  depends_on: &base-django-depends
    db:
     condition: service_healthy
  environment:
    DATABASE_URL: "postgres://${PGUSER}:${PGPASSWORD}@db:5432/${PGDATABASE}"
    DEBUG: "${DEBUG:-False}"
    SECRET_KEY: "${SECRET_KEY:-}"
    SENTRY_DSN: "${SENTRY_DSN:-}"
    SENTRY_ENV: "${SENTRY_ENV:-}"
  volumes:
    - "media:/app/media"
    - "static:/app/staticfiles"

services:
  django:
    <<: *base-django
    restart: unless-stopped
    depends_on:
      <<: *base-django-depends
      update:
        condition: service_completed_successfully

  update:
    <<: *base-django
    command:
      - /app/update.sh

  db:
    image: postgres:16.2-alpine
    restart: unless-stopped
    environment:
      POSTGRES_DB: "${PGDATABASE}"
      POSTGRES_USER: "${PGUSER}"
      POSTGRES_PASSWORD: "${PGPASSWORD}"
      PGDATA: "/var/lib/postgresql/data/pgdata"
    volumes:
      - db-data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready", "-d", "${PGDATABASE}", "-U", "${PGUSER}"  ]
      interval: 30s
      timeout: 60s
      retries: 5
      start_period: 10s

  nginx:
    image: "mishka251/stalker_op22_cyclic_quest_wiki-nginx:${VERSION}"
    restart: unless-stopped
    volumes:
      - "media:/mediafiles"
      - "static:/staticfiles"
    ports:
      - "80:80"
    depends_on:
      - django

volumes:
  static:
  media:
  db-data: